<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>serviceImpl</name>
  <filePath>src/main/java/${packageName}/service/impl/${moduleName}</filePath>
  <fileName>${className}ServiceImpl.java</fileName>
  <content><![CDATA[
package ${packageName}.service.impl.${moduleName};

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.HashMap;
import com.google.common.collect.Lists;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import ${packageName}.entity.${moduleName}.${className}PO;
import ${packageName}.entity.${moduleName}.${className}POExample;
import ${packageName}.dto.${moduleName}.ResultOf${className}DTO;
import ${packageName}.service.${moduleName}.I${className}Service;
import ${packageName}.dao.${moduleName}.${className}POMapper;

import com.changan.anywhere.common.utils.MybatisFilterUtils;
import com.changan.anywhere.common.mvc.page.rest.request.PageDTO;
import com.changan.anywhere.common.mvc.page.rest.response.ResultPageDTO;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

/**
 * ${className}ServiceImpl
 */
@Service
public class ${className}ServiceImpl implements I${className}Service {
  
  @Autowired
  private ${className}POMapper ${lowerName}POMapper;
  
  //新增
  @Override
  public int insert${className}(${className}PO ${lowerName}) {
    // 设置值
    ${lowerName}.preInsert();
    return ${lowerName}POMapper.insertSelective(${lowerName});
  }

  //修改
  @Override
  public int update${className}(${className}PO ${lowerName}) {
    ${lowerName}.preUpdate();
    return ${lowerName}POMapper.updateByPrimaryKeySelective(${lowerName});
  }

  //通过id查询
  @Override
  public ${className}PO findById(String id) {
    return ${lowerName}POMapper.selectByPrimaryKey(id);
  }

  //通过id删除
  @Override
  public int delete${className}(String id) {
    return ${lowerName}POMapper.deleteByPrimaryKey(id);
  }

  //分页查询
  @Override
  public ResultPageDTO<${className}PO> get${className}List(PageDTO page) {

    ResultPageDTO<${className}PO> result = new ResultPageDTO<${className}PO>();

    ${className}POExample ce = new ${className}POExample();
    MybatisFilterUtils.transformForMybatis(ce.createCriteria(), page.getCollection());
    PageHelper.startPage(page.getPageParms().getPageIndex(), page.getPageParms().getPageSize());
    PageInfo<${className}PO> list = new PageInfo<>(${lowerName}POMapper.selectByExample(ce));
    PageHelper.orderBy(transformOrderBy(page, ${className}PO.class));

    result.setData(list.getList());
    result.setPageNumber(list.getPageNum());
    result.setPageSize(list.getPageSize());
    result.setTotalElements(list.getTotal());
    return result;
  }
  
}
]]>
  </content>
</template>