<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>dictTypeDao</name>
	<filePath>src/main/java/${packageName}/dao/dict</filePath>
	<fileName>DictTypeMapper.java</fileName>
	<content><![CDATA[
package ${packageName}.dao.dict;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.Param;

import ${packageName}.entity.${datasourceName}.DictTypePO;
import ${packageName}.entity.${datasourceName}.DictTypePOExample;
import ${packageName}.entity.${datasourceName}.DictValuePO;

/**
 * @author Hotpotmaterial-Code2
 *
 */
public interface DictTypeMapper{

  /**
   * 查询所有DictType
   * @param delFlag
   * @return
   */
  @Select("SELECT * FROM dict_type WHERE del_flag = ${r'#'}{delFlag}")
  @Results({
    @Result(property = "createdBy", column = "created_by"),
    @Result(property = "updatedBy", column = "updated_by"),
    @Result(property = "createdAt", column = "created_at"),
    @Result(property = "updatedAt", column = "updated_at")
  })
  List<DictTypePO> getAll(@Param("delFlag") String delFlag);
  
  /**
   * 根据id查询DictType
   * @param id
   * @return
   */
  @Select("SELECT * FROM dict_type WHERE del_flag = ${r'#'}{delFlag} AND id = ${r'#'}{id}")
  @Results({
    @Result(property = "createdBy", column = "created_by"),
    @Result(property = "updatedBy", column = "updated_by"),
    @Result(property = "createdAt", column = "created_at"),
    @Result(property = "updatedAt", column = "updated_at")
  })
  DictTypePO findDictType(@Param("id") String id, @Param("delFlag") String delFlag);
  
  /**
   * 根据id删除DictType
   * @param id
   * @param delFlag
   * @return
   */
  @Update("UPDATE dict_type SET del_flag = ${r'#'}{delFlag} WHERE id = ${r'#'}{id}")
  void deleteDictType(@Param("id") String id, @Param("delFlag") String delFlag);
  
  /**
   * 更新dictType
   * @param dictType
   */
  @Update("UPDATE dict_type SET code = ${r'#'}{code}, name = ${r'#'}{name}, created_by = ${r'#'}{createdBy}, "
      + "updated_by = ${r'#'}{updatedBy}, updated_at = ${r'#'}{updatedAt}, created_at = ${r'#'}{createdAt} WHERE id = ${r'#'}{id}")
  void updateDictType(DictTypePO dictType);
  
  /**
   * 新增dictType
   * @param dictType
   */
  @Insert("INSERT INTO dict_type (id,code,name,created_by,created_at,updated_by,updated_at,del_flag) "
      + "VALUES(${r'#'}{id},${r'#'}{code}, ${r'#'}{name}, ${r'#'}{createdBy},${r'#'}{createdAt},${r'#'}{updatedBy},${r'#'}{updatedAt},${r'#'}{delFlag})")
  void insertDictType(DictTypePO dictType);
  
  /**
   * 分页查询
   * @param example
   * @return
   */
  List<DictTypePO> selectByExample(DictTypePOExample example);
  
  /**
   * 根据code查询DictType
   * @param code
   * @return
   */
  @Select("SELECT id FROM dict_type WHERE code = ${r'#'}{code} AND del_flag = ${r'#'}{delFlag}")
  String selectByCode(@Param("code") String code, @Param("delFlag") String delFlag);
  
  /**
   * 根据code查询DictValues
   * @param code
   * @param delFlag
   * @return
   */
  @Select("SELECT * FROM dict_value WHERE dict_code = ${r'#'}{code} AND del_flag = ${r'#'}{delFlag}")
  List<DictValuePO> findDictValueByCode(@Param("code") String code, @Param("delFlag") String delFlag);
}
	]]>
	</content>
</template>