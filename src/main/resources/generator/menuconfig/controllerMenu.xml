<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>controllerMenu</name>
  <filePath>src/main/java/${packageName}/${moduleName}/controller/base</filePath>
  <fileName>MenuConfigController.java</fileName>
  <content><![CDATA[
package ${packageName}<#if moduleName != "">.${moduleName}</#if>.controller.base;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.changan.anywhere.common.mvc.page.rest.response.ResultDTO;
import ${packageName}.dto.other.MenuConfigDTO;
import ${packageName}.dto.other.RequestMenuConfigDTO;
import ${packageName}.service.IMenuConfigService;
import ${packageName}.common.RestStatus;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiParam;

@Controller
@Api(value = "MenuConfig", description = "the MenuConfig API")
@RequestMapping(value = "/demo/api/common")
public class MenuConfigController {

  @Autowired
  private IMenuConfigService menuConfigService;

  /**
   * Menu配置获取接口
   * 
   * @return
   */
  @ApiOperation(value = "Menu配置获取接口", notes = "Menu配置获取接口", response = MenuConfigDTO.class,
      tags = {"MenuConfig"})
  @ApiResponses(
      value = {@ApiResponse(code = 200, message = "返回结果信息", response = MenuConfigDTO.class),
          @ApiResponse(code = 401, message = "返回认证错误信息")})
  @RequestMapping(value = "/menuconfigs", produces = MediaType.APPLICATION_JSON_UTF8_VALUE, method = RequestMethod.GET)
  public ResponseEntity<ResultDTO> menuConfigGet(
  @ApiParam(value = "版本号", required = false) @RequestParam(required = false) String version) {
    return new ResponseEntity<ResultDTO>(new MenuConfigDTO().menumap(menuConfigService.getMenuConfig(version))
        .message(RestStatus.RESULT_SUCCESS.message()).statusCode(RestStatus.RESULT_SUCCESS.code()), HttpStatus.OK);
  }

  /**
   * Menu配置保存接口
   * 
   * @param uiconfig
   * @return
   */
  @ApiOperation(value = "Menu配置保存接口", notes = "Menu配置保存接口", response = ResultDTO.class,
      tags = {"MenuConfig"})
  @ApiResponses(value = {@ApiResponse(code = 200, message = "返回结果信息", response = ResultDTO.class),
      @ApiResponse(code = 401, message = "返回认证错误信息")})
  @RequestMapping(value = "/menuconfigs/save", produces = MediaType.APPLICATION_JSON_UTF8_VALUE,
      method = RequestMethod.POST)
  public ResponseEntity<ResultDTO> menuConfigPost(@RequestBody RequestMenuConfigDTO menuconfig) {
    menuConfigService.saveMenuConfig(menuconfig.getData());
    return new ResponseEntity<ResultDTO>(
        new ResultDTO().message(RestStatus.RESULT_SUCCESS.message()).statusCode(RestStatus.RESULT_SUCCESS.code()), 
        HttpStatus.OK);
  }
  
}
]]>
  </content>
</template>