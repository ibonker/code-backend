<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>FuncServiceImpl</name>
  <filePath>src/main/java/${packageName}/security/service/impl</filePath>
  <fileName>FuncServiceImpl.java</fileName>
  <content><![CDATA[
package ${packageName}.security.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import org.hotpotmaterial.anywhere.common.mvc.page.rest.request.PageDTO;
import org.hotpotmaterial.anywhere.common.mvc.page.rest.response.ResultPageDTO;
import ${packageName}.security.dao.FuncPOMapper;
import ${packageName}.security.entity.HotpotFunctionPO;
import ${packageName}.security.service.IFuncService;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

@Service
public class FuncServiceImpl implements IFuncService {
  
  @Autowired
  private FuncPOMapper funcDao;
  
  //分页查询
  @Override
  public ResultPageDTO<HotpotFunctionPO> getHotpotFunctionList(PageDTO page) {

    ResultPageDTO<HotpotFunctionPO> result = new ResultPageDTO<HotpotFunctionPO>();

    PageHelper.startPage(page.getPageParms().getPageIndex(), page.getPageParms().getPageSize());
    PageInfo<HotpotFunctionPO> list = new PageInfo<>(funcDao.getAllFunc());

    result.setData(list.getList());
    result.setPageNumber(list.getPageNum());
    result.setPageSize(list.getPageSize());
    result.setTotalElements(list.getTotal());
    return result;
  }

  @Override
  public int saveFunc(HotpotFunctionPO hotpotFunctionPO) {
    hotpotFunctionPO.preInsert();
    return funcDao.insert(hotpotFunctionPO);
  }

  @Override
  public int updateFunc(String id, HotpotFunctionPO hotpotFunction) {
    hotpotFunction.preUpdate();
    hotpotFunction.setId(id);
    return funcDao.update(hotpotFunction);    
  }

  @Override
  public int delete(String id) {
    List<HotpotFunctionPO> children =  funcDao.getAllChildren(id);
    if (children != null && children.size() > 0) {
      return 0;
    }
    return funcDao.delete(id);
  }  
}

]]>
  </content>
</template>