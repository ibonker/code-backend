<?xml version="1.0" encoding="UTF-8"?>
<template>
	<name>gradleBuild</name>
	<filePath>/</filePath>
	<fileName>build.gradle</fileName>
	<content><![CDATA[
buildscript {
    repositories {
        maven { 
            url anywhere_repo
        }
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.4.RELEASE'
}

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'java'

repositories {
    maven { 
        url anywhere_repo
    }
}

jar {
    baseName = jar_name
    version =  jar_version
}

group = group_name
    
sourceCompatibility = java_version
targetCompatibility = java_version
    
configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}
  
dependencyManagement {
    imports {
        mavenBom "com.changan:titan-dependencies:${r'$'}{titan_dependencies_version}"
    }
}
    
dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.springframework.boot:spring-boot-starter-aop"
	compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter'
    
    compile "com.fasterxml.jackson.module:jackson-module-jsonSchema:${r'$'}{jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${r'$'}{jackson_version}"
    compile "io.springfox:springfox-swagger2:${r'$'}{swagger_version}"
  	compile "io.springfox:springfox-swagger-ui:${r'$'}{swagger_version}"
    compile "com.alibaba:druid-spring-boot-starter:1.1.0"
    <#if hasOracle == "1">
    compile "com.oracle:ojdbc14:${r'$'}{oracle_version}"
    </#if>
    <#if hasMysql == "1">
    compile "mysql:mysql-connector-java"
    </#if>
 
    compile "com.google.guava:guava"
    compile "org.jadira.usertype:usertype.core:5.0.0.GA"
    compile "org.projectlombok:lombok:1.16.16"
    compile "com.changan:titan-common:${r'$'}{titan_common_version}"
    compile "org.mybatis:mybatis-typehandlers-jsr310:${r'$'}{mybatis_typehandlers_jsr310_version}"
    compile "com.github.pagehelper:pagehelper:${r'$'}{pagehelper_version}"
    compile "com.github.pagehelper:pagehelper-spring-boot-starter:${r'$'}{pagehelper_spring_boot_starter_version}"
    compile "org.hibernate:hibernate-java8:5.0.11.Final"
    
    <#if components?seq_contains("rescentersecurity")>
    compile "com.changan:spring-boot-starter-rescenter-rest:3.5.2-SNAPSHOT"
    </#if>
    compile "com.changan:titan-jsonmeta:0.0.4-SNAPSHOT"
    
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.powermock:powermock-module-junit4"
    testCompile "org.powermock:powermock-api-mockito"
}

springBoot {
    mainClass = '${packageName}<#if moduleName != "">.${moduleName}</#if>.Application'
}
    
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task createJavaProject << {
    sourceSets*.java.srcDirs*.each {
        it.mkdirs()
    }
    sourceSets*.resources.srcDirs*.each {
        it.mkdirs()
    }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradle_version
}
]]>
	</content>
</template>