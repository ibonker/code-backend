<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>controllerApi</name>
  <filePath>src/main/java/${packageName}/${moduleName}/controller/${versionName}</filePath>
  <fileName>MvcConfiguration.java</fileName>
  <content><![CDATA[
package ${packageName}<#if moduleName != "">.${moduleName}</#if>.controller.${versionName};

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.changan.anywhere.common.mvc.page.rest.request.PageDTO;
import com.changan.anywhere.common.mvc.page.rest.response.ResultDTO;
import com.changan.anywhere.common.mvc.page.rest.response.ResultPageDTO;
import com.changan.code.dto.ResultOfComponentsDTO;
import com.changan.code.dto.ResultOfProjectDTO;
import com.changan.code.dto.ResultOfTypeDTO;
import com.changan.code.entity.ProjectPO;
import com.fasterxml.jackson.module.jsonSchema.JsonSchema;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

/** 
 * 
 * @author TitanCode2
 * @version  
 * @since JDK 1.8 
 */
@Configuration
public class ${prefixName}${uriFirstName}Api {

  private static final Logger log = LoggerFactory.getLogger(MvcConfiguration.class);
  
  private MessageSource messageSource;
  
  private Environment environment;
  
  @Autowired
  private SessionFactory sessionFactory;
  
  @Override
  public void setMessageSource(MessageSource messageSource) {
    this.messageSource = messageSource;
  }

  @Override
  public void setEnvironment(Environment environment) {
    this.environment = environment;
  }
  
  @Override
  public Validator getValidator() {
    LocalValidatorFactoryBean factory = new LocalValidatorFactoryBean();
    
    factory.setProviderClass(HibernateValidator.class);
    factory.setValidationMessageSource(this.messageSource);
    return factory;
  }
}
]]>
  </content>
</template>